<snippet>
	<content><![CDATA[

int longestpalindrome(string &s)
{
	vector<vector<int>> arr(s.length(),vector<int> (s.length(),0));
	for(int i=0;i<s.length();i++)
	{
		arr[i][i]=1;
	}
	for(int l=1;l<s.length()-1;l++)
	{
		for(int i=0;i+l<s.length();i++)
		{
			int j=i+l;
			if(s[i]==s[j])
			{
				arr[i][j]=2+arr[i+1][j-1];
			}
			else
			{
				arr[i][j]=max(arr[i+1][j],arr[i][j-1]);
			}
		}
	}
	return arr[0].back();
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>LongestPalindromicSubsequence</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
